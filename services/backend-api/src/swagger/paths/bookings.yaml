# Booking management endpoints
/bookings:
  post:
    tags:
      - Bookings
    summary: Create new booking
    description: Create a new booking for a customer (public endpoint for marketplace)
    security: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [businessId, serviceId, staffId, startTime, customer]
            properties:
              businessId:
                type: string
                description: ID of the business
              serviceId:
                type: string
                description: ID of the service to book
              staffId:
                type: string
                description: ID of the staff member
              startTime:
                type: string
                format: date-time
                description: Booking start time (ISO 8601)
                example: "2024-01-15T10:00:00Z"
              customer:
                type: object
                required: [full_name, email, phone]
                properties:
                  full_name:
                    type: string
                    maxLength: 100
                  email:
                    type: string
                    format: email
                  phone:
                    type: string
                    pattern: '^\+?[\d\s\-()]+$'
              paymentIntentId:
                type: string
                description: Stripe payment intent ID (for paid bookings)
          example:
            businessId: "60d5f484f8d2e8a1b8c9d0e1"
            serviceId: "60d5f484f8d2e8a1b8c9d0e2"
            staffId: "60d5f484f8d2e8a1b8c9d0e3"
            startTime: "2024-01-15T10:00:00Z"
            customer:
              full_name: "John Doe"
              email: "john@example.com"
              phone: "+1-555-123-4567"
            paymentIntentId: "pi_1234567890abcdef"
    responses:
      201:
        description: Booking created successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      400:
        $ref: '#/components/responses/ValidationError'
      409:
        description: Time slot not available
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
            example:
              message: "Time slot is no longer available"
              code: "SLOT_UNAVAILABLE"

  get:
    tags:
      - Bookings
    summary: Get user bookings
    description: Retrieve bookings for authenticated user (customer or business)
    security:
      - bearerAuth: []
    parameters:
      - in: query
        name: status
        schema:
          type: string
          enum: [pending, confirmed, completed, cancelled]
        description: Filter by booking status
      - in: query
        name: startDate
        schema:
          type: string
          format: date
        description: Filter bookings from this date
      - in: query
        name: endDate
        schema:
          type: string
          format: date
        description: Filter bookings until this date
      - in: query
        name: page
        schema:
          type: integer
          minimum: 1
          default: 1
      - in: query
        name: limit
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
    responses:
      200:
        description: User bookings
        content:
          application/json:
            schema:
              type: object
              properties:
                bookings:
                  type: array
                  items:
                    $ref: '#/components/schemas/Booking'
                pagination:
                  type: object
                  properties:
                    page:
                      type: integer
                    limit:
                      type: integer
                    total:
                      type: integer
                    pages:
                      type: integer
      401:
        $ref: '#/components/responses/UnauthorizedError'

/bookings/{bookingId}:
  get:
    tags:
      - Bookings
    summary: Get booking details
    description: Retrieve detailed information about a specific booking
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: bookingId
        required: true
        schema:
          type: string
        description: Booking ID
    responses:
      200:
        description: Booking details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      403:
        description: Access denied to this booking
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      404:
        description: Booking not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

  put:
    tags:
      - Bookings
    summary: Update booking
    description: Update booking details (status, time, etc.)
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: bookingId
        required: true
        schema:
          type: string
        description: Booking ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                enum: [pending, confirmed, completed, cancelled]
                description: Update booking status
              startTime:
                type: string
                format: date-time
                description: Reschedule booking to new time
              staffId:
                type: string
                description: Reassign to different staff member
              notes:
                type: string
                description: Add notes to the booking
          example:
            status: "confirmed"
            notes: "Customer confirmed via phone"
    responses:
      200:
        description: Booking updated successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      400:
        $ref: '#/components/responses/ValidationError'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      403:
        description: Access denied to update this booking
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      404:
        description: Booking not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      409:
        description: Cannot update booking (e.g., already completed)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

  delete:
    tags:
      - Bookings
    summary: Cancel booking
    description: Cancel a booking (soft delete)
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: bookingId
        required: true
        schema:
          type: string
        description: Booking ID
    requestBody:
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              reason:
                type: string
                description: Reason for cancellation
              refundRequested:
                type: boolean
                description: Whether customer requests refund
          example:
            reason: "Schedule conflict"
            refundRequested: true
    responses:
      200:
        description: Booking cancelled successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Booking cancelled successfully"
                booking:
                  $ref: '#/components/schemas/Booking'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      403:
        description: Access denied to cancel this booking
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      404:
        description: Booking not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      409:
        description: Cannot cancel booking (e.g., already completed)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/bookings/{bookingId}/reschedule:
  post:
    tags:
      - Bookings
    summary: Request reschedule
    description: Request to reschedule an existing booking
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: bookingId
        required: true
        schema:
          type: string
        description: Booking ID
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [newStartTime]
            properties:
              newStartTime:
                type: string
                format: date-time
                description: New preferred start time
              newStaffId:
                type: string
                description: Optional new staff member
              reason:
                type: string
                description: Reason for rescheduling
          example:
            newStartTime: "2024-01-16T14:00:00Z"
            reason: "Original time no longer works"
    responses:
      200:
        description: Reschedule request processed
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                booking:
                  $ref: '#/components/schemas/Booking'
                requires_approval:
                  type: boolean
                  description: Whether business needs to approve the reschedule
      400:
        $ref: '#/components/responses/ValidationError'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      404:
        description: Booking not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      409:
        description: New time slot not available
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'